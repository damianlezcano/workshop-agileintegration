apiVersion: v1
kind: Template
metadata:
  annotations:
    openshift.io/display-name: Deploy App!
  name: deploy-java-app
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "${APP_NAME}", "kind": "DeploymentConfig"}]'
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-pipeline
  spec:
    source:
      type: Git
      git:
        uri: ${GIT_REPO}
        ref: ${GIT_BRANCH}
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: APP_NAME
          value: ${APP_NAME}
        - name: GIT_REPO
          value: ${GIT_REPO}
        - name: GIT_BRANCH
          value: ${GIT_BRANCH}
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      type: Binary
    strategy: 
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: ${APP_NAME}:latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
    triggers:
    - imageChangeParams:
        containerNames:
          - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
parameters:
- name: APP_NAME
  displayName: Application Name
  description: Application Name
  required: true
  value: hello-openshift
- name: GIT_REPO
  displayName: Git Repository
  description: Git Repository
  required: true
  value: https://github.com/leandroberetta/hello-openshift.git
- name: GIT_BRANCH
  displayName: Git Branch
  description: Git Branch
  required: true
  value: master